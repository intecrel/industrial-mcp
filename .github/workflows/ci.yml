name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, 'feature/*' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test and Lint
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run TypeScript check
      run: npm run type-check

    - name: Run ESLint
      run: npm run lint

    - name: Build application
      run: npm run build

    - name: Run MCP tests
      run: |
        # Start the dev server in background
        npm run dev &
        DEV_PID=$!
        
        # Wait for server to start
        echo "Waiting for server to start..."
        sleep 15
        
        # Test that server is responding
        curl -f http://localhost:3000/api/health || echo "Health check failed, continuing..."
        
        # Run MCP tests
        node scripts/test-mcp.js --url=http://localhost:3000 --api-key=test-key --mac=84:94:37:e4:24:88 --verbose=false
        
        # Kill the dev server
        kill $DEV_PID || echo "Dev server already stopped"

  # Preview deployment for non-main branches and PRs
  deploy-preview:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' || github.event_name == 'pull_request'
    name: Deploy Preview
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Vercel Preview
      uses: amondnet/vercel-action@v25
      id: vercel-preview
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
        scope: ${{ secrets.VERCEL_ORG_ID }}
        
    - name: Test preview deployment
      if: success()
      run: |
        echo "Testing preview deployment..."
        sleep 30
        PREVIEW_URL="${{ steps.vercel-preview.outputs.preview-url }}"
        if [ -n "$PREVIEW_URL" ]; then
          echo "Testing preview at: $PREVIEW_URL"
          node scripts/test-preview.js "$PREVIEW_URL" "${{ secrets.PROD_API_KEY }}"
        else
          echo "Preview URL not available, skipping tests"
        fi
        
    - name: Comment PR with preview URL
      if: github.event_name == 'pull_request' && success()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const previewUrl = '${{ steps.vercel-preview.outputs.preview-url }}';
          if (previewUrl) {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ **Preview deployment ready!**\n\n' +
                    '**ðŸ”— Preview URL:** ' + previewUrl + '\n' +
                    '**ðŸ“Š MCP Endpoint:** `' + previewUrl + '/api/mcp`\n\n' +
                    '**âœ… Test the deployment:**\n' +
                    '- Neo4j Knowledge Graph tools\n' +
                    '- MySQL Analytics (Matomo) tools\n' +
                    '- Cross-database correlation tools\n' +
                    '- 18+ total MCP tools available\n\n' +
                    '**ðŸ”‘ Testing:** Use `x-api-key` header for MCP endpoints.'
            });
          }

  # Production deployment for main branch
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    name: Deploy to Production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'

    - name: Test production deployment
      run: |
        sleep 30  # Wait for deployment to be ready
        MCP_PROD_URL=https://industrial-mcp-delta.vercel.app \
        API_KEY=${{ secrets.PROD_API_KEY }} \
        MAC_ADDRESS=${{ secrets.PROD_MAC_ADDRESS }} \
        npm run test:prod

    - name: Update deployment status
      if: success()
      run: |
        echo "âœ… Production deployment successful!"
        echo "ðŸ”— Production URL: https://industrial-mcp-delta.vercel.app"
        echo "ðŸ“Š MCP Endpoint: https://industrial-mcp-delta.vercel.app/api/mcp"